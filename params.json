{
  "name": "Omrecorder",
  "tagline": "A Simple Pcm / Wav audio recorder with nice api.",
  "body": "[ ![Download](https://api.bintray.com/packages/kailash09dabhi/maven/om-recorder/images/download.svg) ](https://bintray.com/kailash09dabhi/maven/om-recorder/_latestVersion)\r\nOm Recorder\r\n============\r\n\r\n![Logo](website/static/om.png)\r\n\r\nA Simple Pcm / Wav audio recorder with nice api. \r\n\r\n * Record Pcm audio\r\n * Record Wav audio\r\n * Configure audio source to have desired output\r\n\r\n```java\r\n\r\n  recorder = OmRecorder.wav(\r\n      new PullTransport.Default(mic(), new PullTransport.OnAudioChunkPulledListener() {\r\n        @Override public void onAudioChunkPulled(AudioChunk audioChunk) {\r\n          animateVoice((float) (audioChunk.maxAmplitude() / 200.0));\r\n        }\r\n      }), file());\r\n```   \r\n__For Skip Silence__\r\n```java\r\n  // FOR SKIP SILENCE     \r\n  recorder = OmRecorder.wav(\r\n      new PullTransport.Noise(mic(), new PullTransport.OnAudioChunkPulledListener() {\r\n          @Override public void onAudioChunkPulled(AudioChunk audioChunk) {\r\n            animateVoice((float) (audioChunk.maxAmplitude() / 200.0));\r\n          }\r\n      }, new WriteAction.Default(), new Recorder.OnSilenceListener() {\r\n        @Override public void onSilence(long silenceTime) {\r\n           Log.e(\"silenceTime\", String.valueOf(silenceTime));\r\n           Toast.makeText(WavRecorderActivity.this, \"silence of \" + silenceTime + \" detected\",\r\n               Toast.LENGTH_SHORT).show();\r\n         }\r\n      }, 200/**silence threshold**/), file());\r\n      \r\n @NonNull private File file() {\r\n    return new File(Environment.getExternalStorageDirectory(), \"demo.wav\");\r\n  }\r\n  \r\n```\r\n__Configure Audio Source__\r\n```java\r\n  private AudioSource mic() {\r\n    return new AudioSource.Smart(MediaRecorder.AudioSource.MIC, AudioFormat.ENCODING_PCM_16BIT,\r\n        AudioFormat.CHANNEL_IN_MONO, 44100);\r\n  }\r\n\r\n```\r\n__Start & Stop Recording__\r\n```java\r\n    recorder.startRecording();\r\n    recorder.stopRecording();\r\n```\r\n\r\nFor documentation and additional information see [the website][3].\r\n\r\n__OmRecorder__\r\n\r\nDownload\r\n--------\r\n    compile 'com.kailashdabhi:om-recorder:1.0.0'\r\nLicense\r\n-------\r\n\r\n    Copyright 2016 Kailash Dabhi (Kingbull Technology)\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}